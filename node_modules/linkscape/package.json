{
  "name": "linkscape",
  "description": "A node.js client for the seoMOZ Linkscape API",
  "version": "0.1.2",
  "author": {
    "name": "Michael Peterson"
  },
  "main": "lib/linkscape.js",
  "repository": {
    "type": "git",
    "url": "http://github.com/mjp/node-linkscape.git"
  },
  "engines": {
    "node": ">= 0.2.0"
  },
  "readme": "# SeoMOZ Linkscape API Library\n\nNode-linkscape is a node.js module for asynchronously communicating with the\n[seoMOZ linkscape APIs](http://www.seomoz.org/api). It supports the url-metrics, \nlinks, anchor-text, and top-pages APIs.\n\n## Installation\n\nUse [npm](http://npmjs.org/) to install node-linkscape\n\n    npm install linkscape\n\n## Usage\n\n    var Linkscape = require('linkscape').Linkscape;\n\n    var seomoz = new Linkscape('your-access-id', 'your-secret');\n    seomoz.urlMetrics('www.google.com', ['url', 'links'], function(err, res) {\n        if (err) {\n            console.log(err);\n            return;\n        }\n\n        console.log(res);\n    });\n\n## Methods Available\n\n###urlMetrics\n\n    seomoz.urlMetrics(url, cols, callback)\n\n* `url` The URL you want metrics for, ex: `'www.google.com'`\n* `cols` An array of strings for the columns you want in the\nresponse (see `Linkscape.URL_METRICS_FLAGS`). Ex: `['title', 'url', 'links']`\n* `callback` A function to be called asynchronously once the response comes\nback from the API. The function should accept 2 arguments in the following\norder: `error, result` where error will either be an object or null, and\nresult will be an object containing the response from seoMOZ.\n\n###links\n\n    seomoz.links(url, scope, options, callback)\n\n* `url` The URL you want to get links for, ex: `www.google.com`\n* `scope` The scope of the results as per the seoMOZ API docs, ex: `page_to_page`\n* `options` An object with any of the following:\n\n    * `sort` As per the seoMOZ API docs, ex: `page_authority`\n    * `filter` An array of strings, ex: `['internal', external', 'nofollow']`\n    * `targetCols` Array of strings for the columns returned for the target of the link, see `Linkscape.URL_METRICS_FLAGS`\n    * `sourceCols` Array of strings for the columns returned for the source of the link, see `Linkscape.URL_METRICS_FLAGS`\n    * `linkCols` Array of strings for the columns for the link itself, see `Linkscape.LINK_FLAGS`\n\n* `callback` Same as urlMetrics.\n\n###anchorText\n\n    seomoz.anchorText(url, scope, cols, callback)\n\n* `url` The URL you want to get anchor texts for, ex: `www.google.com`\n* `scope` Scope of the link as per the seoMOZ API docs, ex: `phrase_to_page`\n* `cols` Array of strings for the columns returned, see `Linkscape.ANCHOR_TEXT_FLAGS`\n* `callback` Same as urlMetrics.\n\n###topPages\n\n    seomoz.topPages(url, cols, options, callback)\n\n* `url` The subdomain you want results for\n* `cols` An array of strings for the columns you want in the\nresponse (see `Linkscape.URL_METRICS_FLAGS`). Ex: `['title', 'url', 'links']`\n* `options` An object with any of the following:\n\n    * `offset` Return starting at the nth result\n    * `limit` How many results to return (max 1000)\n\n* `callback` Same as urlMetrics\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mjp/node-linkscape/issues"
  },
  "homepage": "https://github.com/mjp/node-linkscape",
  "_id": "linkscape@0.1.2",
  "dist": {
    "shasum": "3225fed8ed583e630b073d1b88a6d0f2987155e1"
  },
  "_from": "linkscape@",
  "_resolved": "https://registry.npmjs.org/linkscape/-/linkscape-0.1.2.tgz"
}
